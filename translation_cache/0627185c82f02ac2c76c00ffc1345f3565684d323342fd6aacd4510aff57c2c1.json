{
  "original": "| | [](index.html)  \n  \n|   \n  \nAugust 2007  \n  \nA good programmer working intensively on his own code can hold it in his mind the way a mathematician holds a problem he's working on. Mathematicians d...",
  "translation": "| | [](index.html)  \n\n|  \n\n2007年8月  \n\n一位专注于自己代码的优秀程序员，能够像数学家把握正在钻研的难题那样，将整个程序装载在脑海中。数学家解题从不似学童般依赖纸笔演算。他们更多在脑中推演：通过深入理解问题空间，得以如漫步于童年故居的记忆般自如穿梭。编程的至高境界亦复如是。你将完整程序存于脑中，便能随心所欲地调遣它。  \n\n这种能力在项目初期尤为珍贵，因为最初阶段最重要的是保持调整方向的灵活性。不仅是换种方式解决问题，更要能随时修正问题本身。  \n\n你的代码即是你对探索中问题的认知。唯有当代码烙印在脑海中时，你才真正理解这个问题。  \n\n将程序装入大脑并非易事。若中断项目数月，重拾时可能需要数日才能重新透彻理解。即便每日持续开发，每次开工仍需半小时\"加载\"程序到脑中。这尚且是最理想状况。在典型办公室环境中工作的普通程序员，从未进入过这种状态。或更直白地说——他们从未真正理解自己正在解决的问题。  \n\n即使最优秀的程序员，也并非时刻将整个程序装载于脑中。但有些方法能帮助你接近这种状态：  \n\n1. **规避干扰**。干扰对多数工作都有害，对编程尤甚，因为程序员通常游走在所能处理的信息复杂度极限边缘。  \n\n干扰的危害性不取决于时长，而在于其对思维秩序的破坏程度。程序员离座购买三明治时，脑中代码不会消失。但错误的打断方式，三十秒就足以清空你的思维缓存。  \n\n吊诡的是，计划内的干扰可能比突发干扰更致命。若知晓一小时后要开会，你根本不会着手处理复杂任务。",
  "timestamp": "2025-07-14T12:17:15.179243",
  "model": "deepseek-ai/DeepSeek-V3"
}